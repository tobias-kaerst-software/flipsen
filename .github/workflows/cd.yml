name: CD Pipeline

on:
  workflow_dispatch:
  push:
    branches: [main, develop]

permissions:
  contents: write
  pull-requests: write

jobs:
  changes:
    name: Determine
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            frontend:
              - '.github/workflows/cd.yml'
              - 'frontend/**'

  frontend:
    name: Lint and build frontend
    runs-on: ubuntu-latest

    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: Infisical/secrets-action@v1.0.8
        with:
          client-id: ${{ vars.INFISICAL_CLIENT_ID }}
          client-secret: ${{ secrets.INFISICAL_CLIENT_SECRET }}
          project-slug: '${{ vars.INFISICAL_PROJECT_SLUG }}'
          env-slug: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
          secret-path: '/frontend'

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('/bun.lock') }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Install dependencies
        run: bun install
        working-directory: frontend

      - name: Run linter
        run: bun frontend lint
        working-directory: frontend

      - name: Build project
        run: bun frontend build
        working-directory: frontend

      - name: Deploy Azure Static Web App
        uses: azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: 'frontend/application/dist'
          skip_app_build: true
